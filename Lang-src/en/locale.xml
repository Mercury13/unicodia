<?xml version="1.0" encoding="UTF-8" ?>
<!-- native: 简体中文
	 international: Chinese (simplified)
	 eng-terms: what to do with English terms hardcoded into program
		0: use L10n only (for English)
		1: show some
		2: show ALL terms and use them as a sorting key
			(as a workaround for complex languages like Japanese)
	 trigger-stamp: some NUMBER (as you see, date-based), NEVER CHANGES
		(may increase if someone checks blatant auto-translation)
		For example, we are Spanish in US, and are forced to use English.
		What we save: language — English, stamp — greatest of all present langs
		When Spanish finally arrives, its trigger-stamp will be greater,
			and the program will switch to Spanish automatically.
		When the user says, “No, I want English,” max stamp will be new,
			and auto-switch no more happens.
-->
<locale native="English" international="English" eng-terms="0" trigger-stamp="2022060">
	<!-- If you find in the system some language from this list → you switch -->
	<trigger-langs>
		<lang iso="en" />
	</trigger-langs>
	<!-- Alphabetical sorting, right now very simple and locale-independent
		 non-meaning stub of alphabet = underscore _
		 alp follow="1" (see Russian) — this alphabet is not parallel;
		   instead it will be greater than everything we have defined
		   (to split long strings, reduce # of underscores, better sync long alphabets)
		 Limitations:
		 • Difference within first 40 MEANING chars of term/block, otherwise they are deemed equal
		 • Strings that differ with “equal” character only are forbidden:
		    äbb < abc < äbd is supported, but abc < äbc isn’t.
		 • 32-bit chars ALLOWED
		 • Sum of all alphabets following each other 32K
		 • Alphabet with follow=1 MAY contain text (though better not for beauty)
		 • # if alphabets unlimited -->
	<alpha-sort>
		<alp>ABCDEFGHIJKLMNOPQRSTUVWXYZ</alp>
		<alp>abcdefghijklmnopqrstuvwxyz</alp>
		<alp>____________________Ü_____</alp>
		<alp>____________________ü_____</alp>
	</alpha-sort>
	<!-- Alphabetical sort does not count spaces: Ol Chiki < Old Klingon,
		 and Old Klingon < Ol Onal, and that’s OK. But what to do if you’ve got both
		 Ol Chiki and Ol Onal?
		 Some fixups (Greek → Ancient Greek) are built into data
		 and are locale-independent (see “ellipsis” below),
		 but Ol Onal IS locale-dependent.
			<blk start="1E5D0" target="Ol Chiki X" />Used to be
		 -->
	<alpha-fixup />
	<!-- For discoverability some auxiliary blocks are placed next to “parent” ones,
		 breaking alphabet order and referenceability.
		 These blocks are marked with ellipsis. -->
	<ellipsis text="…">
		<blk start="2E80"  /><!-- CJK radicals supplement -->
		<blk start="30A0"  /><!-- Katakana -->
		<blk start="31F0"  /><!-- Katakana phonetic -->
		<blk start="10100" /><!-- Aegean numbers -->
		<blk start="10140" /><!-- Ancient Greek numbers -->
		<blk start="12480" /><!-- Early dynastic cuneiform -->
		<blk start="1AFF0" /><!-- Kana extended-B -->
		<blk start="1B000" /><!-- Kana supplement -->
		<blk start="1B100" /><!-- Kana extended-A -->
		<blk start="1B130" /><!-- Small kana extension -->
		<blk start="1BCA0" /><!-- Shorthand format controls -->
		<blk start="1D200" /><!-- Ancient Greek music notation -->
		<blk start="1F650" /><!-- Ornamental dingbats -->
	</ellipsis>
	<!-- You can make any wiki templates (w/o params) you want. Maybe you’d like to enclose them in CDATA. -->
	<wiki-templates>
		<!-- first{{-}}second  →  typographic dash -->
		<tmpl name="-"><![CDATA[<span style='font-size:4pt'>&#xA0;</span>—<span style='font-size:4pt'> </span>]]></tmpl>
		<!-- first{{,-}}second  →  typographic comma-dash -->
		<tmpl name=",-"><![CDATA[,—<span style='font-size:4pt'> </span>]]></tmpl>
	</wiki-templates>
	<!-- Localized icons. Fixed set: if you want a new one, ask programmer -->
	<icons sort-az="sort_AZ" />
	<!-- Numeric format. Decimal point → BMP char only, test in Tibetan fractions
		 thou-point → BMP char only, special bhv for space
		 thou-min-length — minimum length to get thousand separator
			Test in numeric values: click e.g. 1, “Digit” link, search icon
		 thou-min-length-dense — same in dense text
			Test with Latin (N characters) and CJK ideographs (N characters):
			click Latin/CJK char, “Latin/CJK ideo” link
		 imprecise — policy of imprecise numbers -->
	<num-format dec-point="." thou-point="’" thou-min-length="4" thou-min-length-dense="5">
		<!-- Policy for imprecise numbers (people speaking the language)
		     Shifts always increase, 0=unit, 3=thousand, 6=million, 9=billion
			   Shift 0 may exist, but the system will auto-insert {1}/never
			 Frac: never = always whole number (1230, 12300)
			       avoid = avoid fractions (1230, 12.3k)
				   prefer = use fraction if prefer fractions (1.23k, 12.3k)
				   except1 = same as “never” but fall back to smaller unit if mantissa=1
			 Also bigger units are present, see Japanese -->
		<imprecise>
			<fmt shift="0" text="{1} people" frac="never" />
			<fmt shift="3" text="{1}k" frac="avoid" />
			<fmt shift="6" text="{1}M" frac="prefer" />
			<fmt shift="9" text="{1}bn" frac="prefer" />
		</imprecise>
		<!-- Policy for “over 10k” / “under 10k”
			 phase: num = raw number,
			        unit = after application of imprecise’s format -->
		<moreless less="<{1}" more=">{1}" phase="num" />
		<!-- Turkish write “%10” 
				inverse: swap number and %, true/false
				space: need thin space, true/false
			 Used in both {{%|10}} and more high-level templates working with percentages -->
		<percent inverse="0" space="1" />
	</num-format>
	<!-- Rules for building cardinal plural forms: 1 lap, 2 laps
			All lines are sequentially checked: take remainder by MOD,
			and if it’s in MIN..MAX, take OUTCOME and stop.
			Neither applies → take default-outcome.
			Possible outcomes: zero, one, two, few, many, other
				(Unicode states that six are enough for all languages) -->
	<cardinal-rules default-outcome="many">
		<rule mod="0" min="1" max="1" outcome="one" /><!-- 1 lap -->
	</cardinal-rules>
	<!-- Misc. language peculiarities
			still-uses-burmese: uses pair Myanmar/Burmese
				(writes location of Myanmar for Burmese script) -->
	<peculiarities still-uses-burmese="0" />
	<!-- Punctuation
			key-value-colon: in “UTF-8: 00”
			uniform-comma: in uniform words “first, second”
			semicolon: in “first, second; did the third”
				(script’s languages only, in English see Sunuwar)
			left-paren, right-paren: in script’s languages only
			indent-ellip: ellipsis for indent, in version info only
			range: ellipsis or dash for range (1…2)
				(script’s language only, see Rejang)
			year-range: ellipsis or dash for range (2000–2010)
				(script’s language only, see Ethiopic A) -->
	<punctuation key-value-colon=": " uniform-comma=", " semicolon="; "
			left-paren="(" right-paren=")" indent-ellip="…"
			range="…" year-range="–" />
</locale>
